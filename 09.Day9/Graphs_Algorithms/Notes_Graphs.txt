
1.  Dijkstra's  shortest paths and minimum spanning trees
	https://www.geeksforgeeks.org/csharp-program-for-dijkstras-shortest-path-algorithm-greedy-algo-7/

2.  Prim's for shortest paths and minimum spanning trees using greedy methods; 
		https://www.geeksforgeeks.org/prims-minimum-spanning-tree-mst-greedy-algo-5/
		
		
3.  Kruskal's for minimum spanning trees. 	
		https://www.geeksforgeeks.org/kruskals-minimum-spanning-tree-algorithm-greedy-algo-2/


4.  Floyd-Warshall  for all-pairs shortest paths with dynamic programming
		https://www.geeksforgeeks.org/floyd-warshall-algorithm-dp-16/?ref=header_search

5.  Bellman-Ford for all-pairs shortest paths with dynamic programming; 

		https://www.geeksforgeeks.org/bellman-ford-algorithm-dp-23/?ref=lbp
--------------------------------------------------------------------------------------------------------------------


These techniques are pivotal for network optimization and pathfinding in complex systems.


Components of a Graph
Vertices:Vertices are the basic units of the graph used to represent real-life objects, persons, or entities. Sometimes, vertices are also known as Nodes.



Edges:Edges are drawn or used to connect two vertices of the graph. Sometimes, edges are also known as Arcs.

https://www.javatpoint.com/dijkstras-algorithm




What are Weighted Graphs?
A Graph is said to be Weighted if each edge is assigned a 'weight'. The weight of an edge can denote distance, time, or anything that models the 'connection' between the pair of vertices it connects.

For instance, we can observe a blue number next to each edge in the following figure of the Weighted Graph. This number is utilized to signify the weight of the corresponding edge.








--->  A graph and source vertex are requirements for Dijkstra's Algorithm. 
--->  This Algorithm is established on Greedy Approach and thus finds the locally optimal choice (local minima in this case) at each step of the Algorithm.


Each Vertex in this Algorithm will have two properties defined for it:

Visited Property
Path Property
Let us understand these properties in brief.

Visited Property:
The 'visited' property signifies whether or not the node has been visited.
We are using this property so that we do not revisit any node.
A node is marked visited only when the shortest path has been found.
Path Property:
The 'path' property stores the value of the current minimum path to the node.
The current minimum path implies the shortest way we have reached this node till now.
This property is revised when any neighbor of the node is visited.
This property is significant because it will store the final answer for each node.


